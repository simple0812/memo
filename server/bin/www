#!/usr/bin/env node

var app = require('../app');
var config = require('../config');
var http = require('http');
var url = require('url');
var _ = require('lodash');
var models = require('../models/');

var env = process.env.NODE_ENV || 'production';
var port = normalizePort(process.env.MANAGER_PORT || config.PORT);
app.set('port', port);

var server = http.createServer(app);

models.syncDb()
  .then(function() {
    console.log('数据库同步成功')
    server.listen(port);
    server.on('error', onError);
    server.on('listening', onListening);
  }).catch(function(err) {
    console.log(err, '数据库同步失败')
  })

function normalizePort(val) {
  var port = parseInt(val, 10);

  if (isNaN(port)) {
    // named pipe
    return val;
  }

  if (port >= 0) {
    // port number
    return port;
  }

  return false;
}

function onError(error) {
  if (error.syscall !== 'listen') {
      throw error;
  }

  var bind = typeof port === 'string' ? 'Pipe ' + port : 'Port ' + port;

  // handle specific listen errors with friendly messages
  switch (error.code) {
    case 'EACCES':
      console.error(bind + ' requires elevated privileges');
      process.exit(1);
      break;
    case 'EADDRINUSE':
      console.error(bind + ' is already in use');
      process.exit(1);
      break;
    default:
      throw error;
  }
}

function onListening() {
  var addr = server.address();
  var bind = typeof addr === 'string' ? 'pipe ' + addr : 'port ' + addr.port;
  console.log('Listening on ' + bind + ', env ' + env);
}